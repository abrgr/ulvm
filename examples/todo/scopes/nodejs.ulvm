(ulvm.core/defrunnableenv :nodejs
  "NodeJS Scope Runnable Environment"
  {:ulvm.core/ns :org.ulvm.nodejs
   :ulvm.core/runnable-scopes
   {:org.ulvm.nodejs/nodejs-scope
    {:ulvm.core/artifact-loader
     {:ulvm.core/builtin-artifact-loader-name :ulvm.artifact-loaders/docker-hub
      :ulvm.core/artifact-descriptor {:image "ulvm-nodejs-scope:1.0.0"}}
     :ulvm.core/runner
     {:ulvm.core/builtin-runner-name :ulvm.runners/docker-container
      :ulvm.core/runner-descriptor
      {:image (ulvm.core/from-env :image)
       :host-cfg
        {:network-mode "bridge"
         :extra-hosts
         {(ulvm.core/eval
            (->> (ulvm.core/from-env :ulvm.core/fileserver-base-uri)
                 (java.net.URI.)
                 (.getHost)
                 (str (name (ulvm.core/from-env :ulvm.scopes/scope-name)) "." )))
          (ulvm.core/from-env :ulvm.core/fileserver-ip)}}
       :env {"SCOPE_NAME"  (ulvm.core/eval (name (ulvm.core/from-env :ulvm.scopes/scope-name)))
             "FS_BASE_URI" (ulvm.core/from-env :ulvm.core/fileserver-base-uri)
             "SECRET_KEY"  (ulvm.core/from-env :ulvm.scopes/fs-secret)}}}}}
   :ulvm.core/exported-flows
   {:org.ulvm.node/write-dependencies
    {:ulvm.core/runner
     {:ulvm.core/builtin-runner-name :ulvm.runners/http
      :ulvm.core/runner-descriptor {:method :post
                                    :url (ulvm.core/eval (str "http://" (ulvm.core/from-env :org.ulvm.nodejs/nodejs-scope :container-ip) ":8080/write-deps"))
                                    :body (ulvm.core/eval (str *params*))
                                    :headers {"content-type" "application/edn"}
                                    :acceptable-statuses #{200}}}
     :ulvm.core/ideal-flows #{:org.ulvm.scope/write-dependencies}}}})
